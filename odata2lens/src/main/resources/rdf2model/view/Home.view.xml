<mvc:View xmlns:core="sap.ui.core" xmlns:mvc="sap.ui.core.mvc" xmlns:m="sap.m" xmlns:l="sap.ui.layout" xmlns:base="sap.ui.base"
	controllerName="STW.controller.Home" xmlns="http://www.w3.org/1999/xhtml" xmlns:tool="com.inova8.lens.control">
	<m:App>
		<m:pages>
			<m:Page title="{i18n>home.ViewTitle}" navButtonPress="onNavBack" showNavButton="false">
				<m:content>
					<h1>Vehicle Manufacturing Example</h1>
					<em>SKOS, the Simple Knowledge Organization System, offers an easy to understand schema for vocabularies and taxonomies. However modeling
						precision is lost when skos:semanticRelation predicates are introduced.</em><p/>
					<em>
						Combining SKOS with RDFS/OWL allows both the precision of owl:ObjectProperty to be combined with the flexibility of SKOS. However clarity is
						then lost as the number of core concepts (aka owl:Class) grow.
					</em><p/>
					<em>Many models are not just documenting the ‘state’ of an entity. Instead they are often tracking the actions performed on entities by
						agents at locations. Thus aligning the core concepts to the Activity, Entity, Agent, and Location classes of the PROV ontology provides a
						generic upper-ontology within which to organize the model details.</em>
					<h1>This examples captures information about vehicle manufacturing.</h1>
					<ol>
						<li>Manufacturers: (aka Agent) the manufacturer of models of cars in various production lines sited at plants</li>
						<li>Productions: (aka Activities) the production lines set up to produce models of vehicles on behalf of a manufacturer</li>
						<li>Models: (aka Entity) the models that the manufacturer produces</li>
						<li>Plants:(aka Locations) the plants that house the production lines</li>
					</ol>
					<iframe width="100%" height="100%" src="http://inova8.com/bg_inova8.com/rdf2model-skos-to-prov-via-owl/"/>
				</m:content>
			</m:Page>
		</m:pages>
	</m:App>
</mvc:View>